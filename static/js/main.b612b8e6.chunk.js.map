{"version":3,"sources":["dashboard.js","firebase.js","components/message.js","components/chat.js","components/singleChat.js","action.js","components/addChat.js","components/sideBar.js","components/chatContainer.js","components/login.js","App.js","reportWebVitals.js","reducers/mainReducer.js","reducers/rootReducer.js","store.js","index.js"],"names":["Dashboard","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","connect","state","user","main","id","data","className","senderId","src","senderPhoto","alt","content","chatName","chatId","useState","messageHolder","setMessageHolder","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","length","last","img","update","theLastMessage","message","onSubmit","e","preventDefault","add","timestamp","FieldValue","serverTimestamp","photo","senderEmail","email","senderName","value","onChange","target","type","selectChat","name","dispatch","payload","lastMessage","onClick","href","AddChat","open","setOpen","chatNameHolder","setChatNameHolder","available","setAvailable","errorHolder","setErorrHolder","get","then","some","ele","class","placeholder","chats","setChats","searchHolder","setSearchHolder","signOut","aria-hidden","chat","filter","ChatContainer","Login","signInWithPopup","result","console","log","catch","error","logIn","logOut","onAuthStateChanged","displayName","uid","photoURL","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b612b8e6.chunk.js","sourcesContent":["import React from 'react'\r\nfunction Dashboard() {\r\n    return (\r\n        <div>\r\n            <h1>dashBoard</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import firebase from 'firebase'\r\nconst firebaseConfig = {\r\n    // apiKey: \"AIzaSyB-_lebRAxFGDdZyucF-0S_LwVPunkUtIQ\",\r\n    // authDomain: \"test-308b0.firebaseapp.com\",\r\n    // databaseURL: \"https://test-308b0.firebaseio.com\",\r\n    // projectId: \"test-308b0\",\r\n    // storageBucket: \"test-308b0.appspot.com\",\r\n    // messagingSenderId: \"218325214932\",\r\n    // appId: \"1:218325214932:web:ee6fccd40342271b387d41\",\r\n    // measurementId: \"G-BPCQ22XTL8\"\r\n    apiKey: \"AIzaSyD5bdPxGZsmLfsP-buA2IVsVqUOg1OCe2Y\",\r\n    authDomain: \"test-2-692c5.firebaseapp.com\",\r\n    projectId: \"test-2-692c5\",\r\n    storageBucket: \"test-2-692c5.appspot.com\",\r\n    messagingSenderId: \"750578086901\",\r\n    appId: \"1:750578086901:web:a05f894043fedc80f726bc\",\r\n    measurementId: \"G-HXPGJ0GLBX\"\r\n};\r\nconst firebaseApp=firebase.initializeApp(firebaseConfig)\r\nexport const db = firebaseApp.firestore();\r\nexport const auth = firebase.auth();\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\n//    export const storage = firebase.storage();","import React from 'react'\r\nimport './Message.css'\r\nimport {connect} from 'react-redux'\r\nfunction Message({id,data,user}) {\r\n    return (\r\n        <div className={user.id === data.senderId ? 'sender-message':'message'}>\r\n            <span><img src={data.senderPhoto} alt=\"\"/></span>\r\n            <div className=\"message-info\">{data.content}</div>\r\n            {/* <small>{DateTime.parse(data.timestamp.toDate().toString())}</small> */}\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{user:state.main.user}\r\n}\r\nexport default connect(mapStateToProps)(Message)\r\n","import React,{useState,useEffect} from 'react'\r\nimport './Chat.css'\r\nimport Message from './message'\r\nimport { connect } from 'react-redux';\r\nimport {db} from '../firebase'\r\nimport firebase from 'firebase'\r\n\r\nfunction Chat({chatName,chatId,user}) {\r\n    const [messageHolder,setMessageHolder]=useState('')\r\n    const [messages,setMessages]=useState([])\r\n    const [lastMessage,setLastMessage]=useState('')\r\n    useEffect(() => {\r\n        if(chatId){\r\n          db.collection('chats')\r\n          .doc(chatId)\r\n          .collection('messages')\r\n          .orderBy('timestamp','desc')\r\n          .onSnapshot((snapshot)=>{\r\n              setMessages(\r\n\r\n                  snapshot.docs.map(doc=>{\r\n                      return{\r\n                            id:doc.id,\r\n                            data:doc.data()\r\n                            }\r\n                  })\r\n              )\r\n          })\r\n        }\r\n        \r\n    }, [chatId])\r\n\r\n    useEffect(()=>{\r\n        if(messages.length !==0){\r\n            let last =messages[0].data.content\r\n            let img=messages[0].data.senderPhoto\r\n            db.collection('chats')\r\n            .doc(chatId)\r\n            .update({\r\n            theLastMessage:last,\r\n            img\r\n            })\r\n        }\r\n    },[messages])\r\n\r\n    \r\n\r\n    const handleSubmit=(e)=>{\r\n\r\n        e.preventDefault();\r\n\r\n        \r\n\r\n        db.collection('chats')\r\n          .doc(chatId)\r\n          .collection('messages')\r\n          .add({\r\n              timestamp:firebase.firestore.FieldValue.serverTimestamp(),\r\n              content:messageHolder,\r\n              senderId:user.id,\r\n              senderPhoto:user.photo,\r\n              senderEmail:user.email,\r\n              senderName:user.id\r\n          })\r\n\r\n        setMessageHolder('')\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n\r\n            <div className=\"chat-top-bar\">\r\n                <span>{chatName}</span>\r\n            </div>\r\n\r\n            <div className=\"chat-middle-part\">\r\n                {\r\n                    messages.map(message=>{\r\n                        return <Message id={message.id} data={message.data}  />\r\n                    })\r\n                }\r\n            </div>\r\n            { chatName ?\r\n            <div className=\"chat-bottom-part\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <input value={messageHolder} onChange={(e)=>setMessageHolder(e.target.value)} type=\"text\"/>\r\n                </form>\r\n            </div>\r\n            :\r\n            ''\r\n            }\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n            chatName:state.main.chatName,\r\n            chatId:state.main.chatId,\r\n            user:state.main.user\r\n          }\r\n}\r\nexport default connect(mapStateToProps)(Chat) \r\n","import React from 'react'\r\nimport './SingleChat.css'\r\nimport avatar from '../1111.png'\r\nimport {selectChat} from '../action'\r\nimport { connect } from 'react-redux';\r\n function SingleChat({id,chatName,selectChat,lastMessage,img}) {\r\n\r\n     const handleSingleChatClick=()=>{\r\n         selectChat(id,chatName)  \r\n     }\r\n\r\n    return (\r\n        <div className=\"single-chat\" onClick={handleSingleChatClick}>\r\n\r\n            <a href=\"\"><img src={img} alt=\"\"/></a>\r\n\r\n            <div className=\"single-chat-info\">\r\n                <p>{chatName}</p>\r\n                <h5>{lastMessage}</h5>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default connect(null,{selectChat})(SingleChat) \r\n","export const logIn=(user)=>{\r\n\r\n    return (dispatch)=>{\r\n\r\n        dispatch({\r\n            type:'LOGIN',\r\n            payload:user\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const logOut=()=>{\r\n\r\n    return (dispatch)=>{\r\n\r\n        dispatch({\r\n            type:'LOGOUT'\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const selectChat=(id,name)=>{\r\n\r\n    return (dispatch)=>{\r\n\r\n        dispatch({\r\n            type:'SELECT_CHAT',\r\n            payload:{id,name}\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React ,{useEffect, useState} from 'react'\r\nimport './addChat.css'\r\nimport {db} from '../firebase'\r\nfunction AddChat({open,setOpen}) {\r\n\r\n    const [chatNameHolder,setChatNameHolder]=useState('')\r\n    const [available,setAvailable]=useState(false)\r\n    const [errorHolder,setErorrHolder]=useState('')\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        \r\n       if(available){\r\n            db.collection('chats').add({\r\n                chatName:chatNameHolder,\r\n                theLastMessage:null,\r\n                img:null\r\n            })\r\n            setChatNameHolder('')\r\n            setOpen(false)\r\n       }\r\n    \r\n    }\r\n    \r\n    useEffect(()=>{\r\n\r\n        db.collection('chats')\r\n        .get()\r\n        .then(collection=>{\r\n\r\n            let exists= collection.docs.some(ele=>{\r\n                return ele.data().chatName === chatNameHolder\r\n            })\r\n\r\n            if(exists){\r\n                setAvailable(false)\r\n                setErorrHolder('not avilable')\r\n            }else if(chatNameHolder === ''){\r\n                setAvailable(false)\r\n                setErorrHolder('this input can not be empty')\r\n            }else{\r\n                setAvailable(true)\r\n                setErorrHolder('')\r\n            }\r\n\r\n        })\r\n\r\n    },[chatNameHolder])\r\n\r\n    return (\r\n        <div className={`add-chat ${ open === false ? 'remove' : '' }`}>\r\n            <div className=\"input-box\">\r\n                <div className=\"close\" onClick={()=>{setOpen(false)}}>\r\n                  <i class=\"far fa-times-circle\"></i>\r\n                </div>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input value={chatNameHolder} onChange={(e)=>{setChatNameHolder(e.target.value)}} placeholder=\"chat name\" type=\"text\"/>\r\n                </form>\r\n                <div className=\"validation-error\">\r\n                   {errorHolder}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddChat\r\n","import React,{useEffect,useState} from 'react'\r\nimport './SideBar.css'\r\nimport { connect } from 'react-redux';\r\nimport SingleChat from './singleChat'\r\nimport {db,auth} from '../firebase'\r\nimport AddChat from './addChat'\r\nfunction SideBar({user}) {\r\n\r\n    const [chats,setChats]=useState([])\r\n    const [open,setOpen]=useState(false)\r\n    const [searchHolder,setSearchHolder]=useState('')\r\n    useEffect(()=>{\r\n\r\n        db.collection('chats').onSnapshot((snapshot)=>{\r\n            setChats(\r\n                snapshot.docs.map(doc=>{\r\n                    return {id:doc.id,chatName:doc.data().chatName,last:doc.data().theLastMessage,img:doc.data().img}\r\n                })\r\n            )\r\n        })\r\n\r\n    },[])\r\n\r\n\r\n    \r\n\r\n    const handleLogout=()=>{\r\n        auth.signOut()\r\n    }\r\n    return (\r\n        <div className=\"side-bar\">\r\n            <AddChat setOpen={setOpen} open={open}/>\r\n            <div className=\"top-bar\">\r\n                <img src={user.photo} alt=\"logOut\" onClick={handleLogout}/>\r\n                \r\n                <input value={searchHolder} onChange={(e)=>{setSearchHolder(e.target.value)}} type=\"text\"/>\r\n                \r\n                <span onClick={()=>setOpen(true)}><i class=\"fa fa-plus-square\" aria-hidden=\"true\"></i></span>\r\n            </div>\r\n\r\n            <div className=\"bottom-part\">\r\n                {\r\n                    searchHolder === '' ?\r\n                    chats.map(chat=>{\r\n                        return <SingleChat img={chat.img} user={user} id={chat.id} chatName={chat.chatName} lastMessage={chat.last} />\r\n                    })\r\n                    :\r\n                    chats\r\n                    .filter(ele=>{return ele.chatName === searchHolder })\r\n                    .map(chat=>{\r\n                        return <SingleChat img={chat.img} user={user} id={chat.id} chatName={chat.chatName} lastMessage={chat.last} />\r\n                    })\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        user:state.main.user\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(SideBar)\r\n","import React from 'react'\r\nimport './ChatContainer.css'\r\nimport Chat from './chat'\r\nimport SideBar from './sideBar'\r\nexport default function ChatContainer() {\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <SideBar/>\r\n            <Chat/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { auth , provider} from '../firebase'\r\nimport './login.css'\r\nfunction Login() {\r\n\r\n    const handleLogin=()=>{\r\n        auth.signInWithPopup(provider).then(function(result) {\r\n          console.log(result)\r\n         \r\n        }).catch(function(error) {\r\n         console.log(error)\r\n        });\r\n      }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <button onClick={handleLogin}>login</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import Dashboard from './dashboard'\nimport { connect } from 'react-redux';\nimport { logIn,logOut } from './action'\nimport { useEffect } from 'react'\nimport { auth , provider,db } from './firebase'\nimport ChatContainer from './components/chatContainer'\nimport Login from './components/login'\n\nfunction App({ logIn ,logOut,user }) {\n\n  useEffect(()=>{\n\n    auth.onAuthStateChanged(function(user) {\n      if (user) {\n\n        logIn({\n          name:user.displayName,\n          email:user.email,\n          id:user.uid,\n          photo:user.photoURL\n        })\n\n      }else{\n\n        logOut()\n\n      }\n    });\n  },[])\n\n  \n\n  \n  \n  return (\n    <div className=\"App\">\n      {user ? <ChatContainer/>:<Login/> }\n    </div>\n  );\n}\nconst mapStateToProps=(state)=>{\n  return{user:state.main.user}\n}\nexport default connect(mapStateToProps,{ logIn,logOut })(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState={\r\n    user:null,\r\n    chatId:null,\r\n    chatName:null\r\n}\r\nexport default (state = initialState, action )=>{\r\n    switch(action.type){\r\n\r\n        case 'LOGIN':\r\n        return {\r\n            ...state,\r\n            user:action.payload\r\n        }\r\n\r\n        case 'LOGOUT':\r\n        return {\r\n            ...state,\r\n            user:null\r\n        }\r\n\r\n        case 'SELECT_CHAT':\r\n        return {\r\n            ...state,\r\n            chatId:action.payload.id,\r\n            chatName:action.payload.name\r\n        }\r\n\r\n       \r\n\r\n\r\n        \r\n\r\n        default:\r\n        return state\r\n    }\r\n    \r\n}","import { combineReducers } from 'redux'\r\nimport Main from './mainReducer'\r\n\r\nexport default combineReducers({\r\n\r\n    main: Main\r\n    \r\n})","import { createStore,applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers/rootReducer'\r\n\r\nconst initialState ={};\r\nconst middleware =[thunk]\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store'\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}